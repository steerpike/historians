"A datetime string with format 'Y-m-d H:i:s', e.g. '2018-01-01 13:00:00'."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format 'Y-m-d', e.g. '2011-05-23'."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User!]! @paginate(type: "paginator" model: "App\\User")
    user(id: ID @eq): User @find(model: "App\\User")
    questions: [Question!]! @paginate(type: "paginator" model: "App\\Question")
    question(id: ID @eq): Question @find(model: "App\\Question")
    ontologies(type: String! @eq): [Tag!] @all(model: "App\\Tag",scopes: ["ordered"])
    ontology(id: ID @eq): Tag @find(model: "App\\Tag")
}

type Mutation {
    createUser(
        name: String @rules(apply: ["required"])
        email: String @rules(apply: ["required", "email", "unique:users,email"])
    ): User @create(model: "App\\User")
    updateUser(
        id: ID @rules(apply: ["required"])
        name: String
        email: String @rules(apply: ["email"])
    ): User @update(model: "App\\User")
    deleteUser(
        id: ID @rules(apply: ["required"])
    ): User @delete(model: "App\\User")
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}
type Question {
    id: ID!
    reddit_id: String!
    title: String!
    url: String
    text: String
    html: String
    permalink: String
    author: String
    created_utc: Int
    answers: [Answer] @hasMany
    categories: [Tag] @hasMany
    tags: [Tag] @hasMany
    topics: [Tag] @hasMany
}
type Answer {
    id: ID!
    reddit_id: String!
    body: String!
    author: String
    body_html: String
    replies: String
    question: [Question] @belongsTo
}
type Tag {
    id: ID!
    label: String!
    type: String!
    questions: [Question] @hasMany
}